import 'package:flutter/cupertino.dart';
import 'package:givejobtimer_mobile/internationalization/localization/localization_constants.dart';
import 'package:givejobtimer_mobile/internationalization/model/language.dart';

class LanguageUtil {

  static List<Language> getLanguages() {
    return <Language>[
      Language(1, 'ğŸ‡§ğŸ‡¾', 'BLR', 'be'),
      Language(2, 'ğŸ‡¬ğŸ‡§', 'GBR', 'en'),
      Language(3, 'ğŸ‡¬ğŸ‡ª', 'GEO', 'pt'),
      Language(4, 'ğŸ‡µğŸ‡±', 'POL', 'pl'),
      Language(5, 'ğŸ‡·ğŸ‡º', 'RUS', 'ru'),
      Language(6, 'ğŸ‡ºğŸ‡¦', 'UKR', 'uk'),
    ];
  }

  static String findFlagByNationality(String nationality) {
    switch (nationality) {
      case 'BE': return 'ğŸ‡§ğŸ‡¾';
      case 'EN': return 'ğŸ‡¬ğŸ‡§';
      case 'GE': return 'ğŸ‡¬ğŸ‡ª';
      case 'PL': return 'ğŸ‡µğŸ‡±';
      case 'RU': return 'ğŸ‡·ğŸ‡º';
      case 'UK': return 'ğŸ‡ºğŸ‡¦';
      default: return 'ğŸ‡¬ğŸ‡§';
    }
  }

  static String convertShortNameToFullName(BuildContext context, String nationality) {
    switch (nationality) {
      case 'BE': return getTranslated(context, 'belarus');
      case 'EN': return getTranslated(context, 'england');
      case 'FR': return getTranslated(context, 'france');
      case 'GE': return getTranslated(context, 'georgia');
      case 'DE': return getTranslated(context, 'germany');
      case 'RO': return getTranslated(context, 'romania');
      case 'NL': return getTranslated(context, 'netherlands');
      case 'NO': return getTranslated(context, 'norway');
      case 'PL': return getTranslated(context, 'poland');
      case 'RU': return getTranslated(context, 'russia');
      case 'ES': return getTranslated(context, 'spain');
      case 'SE': return getTranslated(context, 'sweden');
      case 'UK': return getTranslated(context, 'ukraine');
      case 'OTHER': return getTranslated(context, 'other');
      default: return getTranslated(context, 'england');
    }
  }
}
